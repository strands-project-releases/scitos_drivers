#! /usr/bin/env python

PACKAGE='scitos_mira'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name       Type      Level Description     Default Min   Max
gen.add("AutoPowerOn",
        int_t,
        0,
        "Auto power-on time [min]. Can be used together with ChargerPowerMode=standby to automatically boot the robots PC after the specified time. E.g. AutoPowerOn=10 will start the PC again in 10 minutes (if its not already on)",
        10,
        0,
        30)

power_on_enum = gen.enum([ gen.const("OFF", int_t, 0, "Charger off."),
                           gen.const("ON", int_t, 1, "Charger on."),
                           gen.const("AUTO", int_t, 2, "Auto select."),
                           gen.const("STANDBY", int_t, 3, "Ready"),
                           gen.const("ON_AFTER_RECHARGE", int_t, 4, "Auto on after charge") ],
                         "Enum of ChargerPowerMode values")
gen.add("ChargerPowerMode",
        int_t,
        0,
        "The power mode of the charger.",
        2,
        0,
        4,
        edit_method=power_on_enum)

gen.add("ContactsDown",
        bool_t,
        0,
        "Are charging contacts lowered. (Only robots with charging contacts that can be lowered and raised. Use with care)",
        False)

exit(gen.generate(PACKAGE, "scitos_node", "ChargerParameters"))

# Could add these:
#MotorStepsDown (uint16) [property]
#How many steps for moving contacts down. (Only robots with charging contacts that can be lowered and raised. Use with care)
#MotorStepsUp (uint16) [property]
#How many steps for moving contacts up. (Only robots with charging contacts that can be lowered and raised. Use with care)
#MotorStepsInitDown (uint16) [property]
#How many steps for moving contacts down on initialization. (Only robots with charging contacts that can be lowered and raised. Use with care)
